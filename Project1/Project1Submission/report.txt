1) original.cpp -  I entered the input: 0 registered voters were surveyed, with 1 voting for Gavin, and 2 voting for Brian. The result was “inf% say they will vote for Gavin. inf% say they will vote for Brian. Brian is predicted to win the election”.The undefined behaviour occurred during program execution. The code computes the percentage by dividing the votes a candidate received by the total number of registered voters. As I had entered 0 for the total number of registered voters, it led to the program compiling properly, however, the output was incorrect as the code returned “inf%” as the percentage of voters that voted for candidates Gavin and Brian. I also entered the input:  -10 registered voters were surveyed, 0 voting for Gavin, and 1 voting for Brian. The result was“-0.0% will vote for Gavin. -10.0% will vote for Brian. Brian is predicted to win the election.” The incorrect output  was because the input was a negative number and it led to the negative percentages being calculated for the respective candidates.

2) logic_error.cpp - On line 20, I replaced double pctGavin = 100.0 * forGavin / numberSurveyed; with 100.0 * forGavin * numberSurveyed;. Instead of dividing the (number of voters voting for Gavin * 100)  by the numberSurveyed, the above code returns the (number of voters voting for Gavin multiplied by 100.0 multiplied by numberSurveyed). The code compiles and returns no errors however it does return incorrect output for normal input cases. For example if the input is: 10 registered voters were surveyed, 7 voting for Gavin, and 3 voting for Brian the result is“7000.0% say they will vote for Gavin. 30.0% say they will vote for Brian. Gavin is predicted to win the election”. 
This shows that for normal input scenarios the code returns wrong outputs with the percentage voting for Gavin being out of bounds.

3) compile_error.cpp - I removed the variable declaration: int numberSurveyed on line 9 resulting in the error “undeclared identifier with error numberSurveyed was not declared in this scope”. I also removed the semicolon on line 10 after declaring the variable forGavin of type int which also led to an error of expected “;” after declaration. In addition, the errors after removing semicolon include expected initializer before ‘int’ forBrian and both forGavin and forBrian were not declared in this scope. In both cases the code failed to build/compile as both actions violate the syntax rules of C++.
